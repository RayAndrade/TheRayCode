using System;

namespace TheRayCode.DesignPatterns.FactoryMethod.Conceptual
{

    // add abstract class
    abstract class Creator
    {
        public abstract IProduct FactoryMethod();
        public string SomeOperation()
        {
            var product = FactoryMethod();
            var result = "Creator: This creator's code has just worked with "
                         + product.Operation();

            return result;
        }
    }

    
    
    public interface IProduct
    {
        string Operation();
    }

    //add ConcreteProduct1
    class ConcreteProduct1 : IProduct
    {
        public string Operation()
        {
            return "{From of ConcreteProduct1}";
        }
    }
    
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello world");
            //new Client().Main();
        }
    }
}