        -:    0:Source:/home/ray/Desktop/TheRayCode/CPP/Decorator/ConcreteDecoratorA.h
        -:    0:Graph:/home/ray/Desktop/TheRayCode/CPP/Decorator/cmake-build-debug-coverage/CMakeFiles/Decorator.dir/main.cpp.gcno
        -:    0:Data:/home/ray/Desktop/TheRayCode/CPP/Decorator/cmake-build-debug-coverage/CMakeFiles/Decorator.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by ray on 8/25/20.
        -:    3://
        -:    4:
        -:    5:#ifndef DECORATOR_CONCRETEDECORATORA_H
        -:    6:#define DECORATOR_CONCRETEDECORATORA_H
        -:    7:#include "Decorator.h"
        -:    8:
        -:    9:class ConcreteDecoratorA : public Decorator {
        -:   10:    /**
        -:   11:     * Decorators may call parent implementation of the operation, instead of
        -:   12:     * calling the wrapped object directly. This approach simplifies extension of
        -:   13:     * decorator classes.
        -:   14:     */
        -:   15:public:
        1:   16:    ConcreteDecoratorA(Component* component) : Decorator(component) {
        1:   16-block  0
        1:   17:    }
        1:   18:    std::string Operation() const override {
        2:   19:        return "ConcreteDecoratorA(" + Decorator::Operation() + ")";
        1:   19-block  0
        1:   19-block  1
        1:   19-block  2
        1:   19-block  3
    $$$$$:   19-block  4
    $$$$$:   19-block  5
    $$$$$:   19-block  6
        -:   20:    }
        -:   21:};
        -:   22:
        -:   23:
        -:   24:#endif //DECORATOR_CONCRETEDECORATORA_H
